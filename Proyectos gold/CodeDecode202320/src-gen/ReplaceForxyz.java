// DO NOT EDIT THIS FILE! IT IS AUTOMATICALLY GENERATED FROM FILE "src/ReplaceForxyz.gold"
import gold.*;
import gold.structures.*;
import gold.structures.automaton.*;
import gold.structures.bag.*;
import gold.structures.collection.*;
import gold.structures.deque.*;
import gold.structures.disjointset.*;
import gold.structures.graph.*;
import gold.structures.heap.*;
import gold.structures.list.*;
import gold.structures.map.*;
import gold.structures.multimap.*;
import gold.structures.point.*;
import gold.structures.queue.*;
import gold.structures.set.*;
import gold.structures.stack.*;
import gold.structures.tree.*;
import gold.structures.tree.binary.*;
import gold.structures.tree.nary.*;
import gold.structures.tuple.*;
import gold.structures.turingMachine.*;
import gold.swing.*;
import gold.swing.icon.*;
import gold.swing.icon.ajaxload.*;
import gold.swing.icon.famfamfam.*;
import gold.swing.icon.gold.*;
import gold.swing.icon.jlfgr.*;
import gold.swing.icon.wikimedia.*;
import gold.swing.icon.windows.*;
import gold.swing.look.*;
import gold.swing.util.*;
import gold.test.*;
import gold.test.automaton.*;
import gold.test.general.*;
import gold.test.graph.*;
import gold.util.*;
import gold.visualization.*;
import gold.visualization.automaton.*;
import gold.visualization.graph.*;
import gold.visualization.quadtree.*;
import gold.visualization.turingMachine.*;
import gold.visualization.util.*;
import java.lang.*;
import org.apfloat.*;
import static gold.util.GReflection.*;
@SuppressWarnings("all")
public final class ReplaceForxyz {
  static {
    gold.swing.util.GUtilities.installGoldLookAndFeel();
  }
  public static Object A=null;
  public static void main(String[] args) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=28;
      if ($opEqualY($invokeField("length",args),0)) {
        $line=28;
        A=$fix(GCollections.asSet('a','c','t'));
      }
      else {
        $line=30;
        gold.structures.set.ISet $v1=$newSet();
        int $v3=$int(0);
        int $v4=$int($invokeMethod("length",((java.lang.String[])args)[$int(0)],new Object[]{}))-1;
        $v2:for (int i=$v3; i<=$v4; i++) {
          $v1.add($invokeMethod("charAt",((java.lang.String[])args)[$int(0)],new Object[]{i}));
        }
        A=$fix($opDiffeY($v1,GCollections.asSet('$','#')));
      }
      $line=35;
      Object coder=$fix(ReplaceForxyz.createCoder());
      $line=36;
      Object deCoder=$fix(ReplaceForxyz.createDecoder());
      $line=37;
      System.out.println($message(new Object[]{$opAdditY($opAdditY($opAdditY($opAdditY("Input strings of the form xyz:W#. with x, y, over ",A),"and W  over   "),A),"* (end with an empty string)")}));
      $line=40;
      Utilities.testCodeDecode($cast(gold.structures.automaton.ITransducer.class,coder),$cast(gold.structures.automaton.ITransducer.class,deCoder));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,ReplaceForxyz.class,"main",$line);
    }
  }
  public static ITransducer createCoder() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=47;
      Object Ls=$fix(A);
      $line=48;
      Object M0=$fix(GCollections.asSet(""));
      $line=49;
      gold.structures.set.ISet $v5=$newSet();
      $v6:for (Object a:GCollections.unmodifiableCollection(Ls)) {
        $v5.add($opAdditY("",a));
      }
      Object M1=$fix($v5);
      $line=50;
      gold.structures.set.ISet $v7=$newSet();
      $v8:for (Object a:GCollections.unmodifiableCollection(Ls)) {
        for (Object b:GCollections.unmodifiableCollection($opDiffeY(Ls,GCollections.asSet(a)))) {
          $v7.add($opAdditY($opAdditY("",a),b));
        }
      }
      Object M2=$fix($v7);
      $line=51;
      gold.structures.set.ISet $v9=$newSet();
      $v10:for (Object a:GCollections.unmodifiableCollection(Ls)) {
        for (Object b:GCollections.unmodifiableCollection($opDiffeY(Ls,GCollections.asSet(a)))) {
          for (Object c:GCollections.unmodifiableCollection($opDiffeY(Ls,GCollections.asSet(b,a)))) {
            $v9.add($opAdditY($opAdditY($opAdditY("",a),b),c));
          }
        }
      }
      Object M3=$fix($v9);
      $line=52;
      gold.structures.set.ISet $v11=$newSet();
      $v12:for (Object s:GCollections.unmodifiableCollection($opUnionY($opUnionY($opUnionY(M1,M2),M3),M0))) {
        $v11.add(GCollections.asList(s));
      }
      gold.structures.set.ISet $v13=$newSet();
      $v14:for (Object s:GCollections.unmodifiableCollection(M3)) {
        int $v15=$int(0);
        int $v16=$int(2);
        for (int d=$v15; d<=$v16; d++) {
          $v13.add(GCollections.asList(s,d));
        }
      }
      Object Q=$fix($opUnionY($opUnionY($v11,$v13),GCollections.asSet("E","F")));
      $line=53;
      System.out.println($message(new Object[]{Q}));
      $line=55;
      Object \u03A3=$fix($opUnionY(A,GCollections.asSet('#',':')));
      $line=56;
      Object O=$fix($opUnionY(\u03A3,GCollections.asSet('$')));
      $line=57;
      Object q_0=$fix(GCollections.asList(""));
      $line=58;
      Object F=$fix(GCollections.asSet("F"));
      $line=59;
      $result=$invokeConstructor(GDeterministicTransducer.class,new Object[]{Q,\u03A3,O,q_0,F,new GMethod(ReplaceForxyz.class,"\u03B4"),new GMethod(ReplaceForxyz.class,"g"),new GMethod(ReplaceForxyz.class,"h")});
      if (true) break $try;
      $line=60;
      $rethrow(new RuntimeException("The function \"createCoder()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,ReplaceForxyz.class,"createCoder",$line);
    }
    return $cast(ITransducer.class,$result);
  }
  public static ITransducer createDecoder() {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=65;
      Object Ls=$fix(A);
      $line=66;
      Object M0=$fix(GCollections.asSet(""));
      $line=67;
      gold.structures.set.ISet $v17=$newSet();
      $v18:for (Object a:GCollections.unmodifiableCollection(Ls)) {
        $v17.add($opAdditY("",a));
      }
      Object M1=$fix($v17);
      $line=68;
      gold.structures.set.ISet $v19=$newSet();
      $v20:for (Object a:GCollections.unmodifiableCollection(Ls)) {
        for (Object b:GCollections.unmodifiableCollection($opDiffeY(Ls,GCollections.asSet(a)))) {
          $v19.add($opAdditY($opAdditY("",a),b));
        }
      }
      Object M2=$fix($v19);
      $line=69;
      gold.structures.set.ISet $v21=$newSet();
      $v22:for (Object a:GCollections.unmodifiableCollection(Ls)) {
        for (Object b:GCollections.unmodifiableCollection($opDiffeY(Ls,GCollections.asSet(a)))) {
          for (Object c:GCollections.unmodifiableCollection($opDiffeY(Ls,GCollections.asSet(b,a)))) {
            $v21.add($opAdditY($opAdditY($opAdditY("",a),b),c));
          }
        }
      }
      Object M3=$fix($v21);
      $line=70;
      gold.structures.set.ISet $v23=$newSet();
      $v24:for (Object s:GCollections.unmodifiableCollection($opUnionY($opUnionY($opUnionY(M1,M2),M3),M0))) {
        $v23.add(GCollections.asList(s));
      }
      gold.structures.set.ISet $v25=$newSet();
      $v26:for (Object s:GCollections.unmodifiableCollection(M3)) {
        int $v27=$int(0);
        int $v28=$int(2);
        for (int d=$v27; d<=$v28; d++) {
          $v25.add(GCollections.asList(s,d));
        }
      }
      Object Q=$fix($opUnionY($opUnionY($v23,$v25),GCollections.asSet("E","F")));
      $line=71;
      System.out.println($message(new Object[]{Q}));
      $line=73;
      Object \u03A3=$fix($opUnionY(A,GCollections.asSet('#',':')));
      $line=74;
      Object O=$fix($opUnionY(\u03A3,GCollections.asSet('$')));
      $line=75;
      Object q_0=$fix(GCollections.asList(""));
      $line=76;
      Object F=$fix(GCollections.asSet("F"));
      $line=77;
      $result=$invokeConstructor(GDeterministicTransducer.class,new Object[]{Q,O,\u03A3,q_0,F,new GMethod(ReplaceForxyz.class,"\u03B41"),new GMethod(ReplaceForxyz.class,"g"),new GMethod(ReplaceForxyz.class,"h1")});
      if (true) break $try;
      $line=78;
      $rethrow(new RuntimeException("The function \"createDecoder()\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,ReplaceForxyz.class,"createDecoder",$line);
    }
    return $cast(ITransducer.class,$result);
  }
  public static Object g(Object x) {
    int $line=0;
    Object $result=null;
    $try:try {
      $result="";
      if (true) break $try;
      $line=79;
      $rethrow(new RuntimeException("The function \"g(x:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,ReplaceForxyz.class,"g",$line);
    }
    return $result;
  }
  public static Object test(ITransducer M) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=85;
      java.util.Scanner sc=null;
      sc=$invokeConstructor(java.util.Scanner.class,new Object[]{$invokeField(System.class,"in",true,null)});
      $line=87;
      String string=null;
      string=$defaultValue(String.class);
      $line=90;
      boolean $v29=false;
      while (true) {
        if ($v29) {
          if ($opEqualY(string,"")) break;
        }
        $v29=true;
        $line=92;
        System.out.println($message(new Object[]{"----------------------------"}));
        $line=93;
        System.out.println($message(new Object[]{$opAdditY($opAdditY($opAdditY($opAdditY("Input strings of the form xyz:W#. with x, y, over ",A),"and W  over   "),A),"* (end with an empty string)")}));
        $line=94;
        string=$cast(String.class,$fix(((java.util.Scanner)sc).nextLine()));
        $line=95;
        if (!$opEqualY(string,"")) {
          $line=96;
          Object result=$fix(((gold.structures.automaton.ITransducer)M).acceptsString($cast(java.lang.String.class,string)));
          $line=97;
          System.out.println($message(new Object[]{$opAdditY($opAdditY($opAdditY("The string was ",(($bool(result))?("accepted"):("not accepted"))),". Output: "),((gold.structures.automaton.ITransducer)M).getOutputString())}));
        }
      }
      $line=103;
      System.out.println($message(new Object[]{"Execution Terminated"}));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,ReplaceForxyz.class,"test",$line);
    }
    return $result;
  }
  public static Object \u03B4(Object q, Object \u03C3) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=108;
      String s=null;
      s=$defaultValue(String.class);
      $line=110;
      if (($opEqualY(q,"E")||$opEqualY(q,"F"))) {
        $line=111;
        $result="E";
        if (true) break $try;
      }
      else {
        $line=112;
        if ($opEqualY($opAbsolY(q),1)) {
          $line=113;
          s=$cast(String.class,$fix($getArrayValue(q,new Object[]{0})));
          $line=114;
          if ((($opEqualY(((java.lang.String)s).length(),0)&&!$opEqualY(\u03C3,'#'))&&!$opEqualY(\u03C3,':'))) {
            $line=115;
            $result=GCollections.asList($opAdditY("",\u03C3));
            if (true) break $try;
          }
          else {
            $line=116;
            if (((($opEqualY(((java.lang.String)s).length(),1)&&!$opEqualY(\u03C3,((java.lang.String)s).charAt($int(0))))&&!$opEqualY(\u03C3,'#'))&&!$opEqualY(\u03C3,':'))) {
              $line=117;
              $result=GCollections.asList($opAdditY($opAdditY("",s),\u03C3));
              if (true) break $try;
            }
            else {
              $line=118;
              if ((((($opEqualY(((java.lang.String)s).length(),2)&&!$opEqualY(\u03C3,((java.lang.String)s).charAt($int(0))))&&!$opEqualY(\u03C3,((java.lang.String)s).charAt($int(1))))&&!$opEqualY(\u03C3,'#'))&&!$opEqualY(\u03C3,':'))) {
                $line=119;
                $result=GCollections.asList($opAdditY($opAdditY("",s),\u03C3));
                if (true) break $try;
              }
              else {
                $line=120;
                if (($opEqualY(((java.lang.String)s).length(),3)&&$opEqualY(\u03C3,':'))) {
                  $line=121;
                  $result=GCollections.asList(s,0);
                  if (true) break $try;
                }
                else {
                  $line=123;
                  $result="E";
                  if (true) break $try;
                }
              }
            }
          }
        }
        else {
          $line=126;
          Object $v30=$getArrayValue(q,new Object[]{0});
          Object $v31=$getArrayValue(q,new Object[]{1});
          s=$cast(String.class,$fix($v30));
          Object p=$fix($v31);
          $line=127;
          if ($opEqualY(\u03C3,':')) {
            $line=127;
            $result="E";
            if (true) break $try;
          }
          else {
            $line=128;
            if ($opEqualY(\u03C3,'#')) {
              $line=128;
              $result="F";
              if (true) break $try;
            }
            else {
              $line=129;
              if (($opEqualY(p,0)&&$opEqualY(\u03C3,((java.lang.String)s).charAt($int(0))))) {
                $line=129;
                $result=GCollections.asList(s,1);
                if (true) break $try;
              }
              else {
                $line=130;
                if ($opEqualY(p,0)) {
                  $line=130;
                  $result=GCollections.asList(s,0);
                  if (true) break $try;
                }
                else {
                  $line=131;
                  if (($opEqualY(p,1)&&$opEqualY(\u03C3,((java.lang.String)s).charAt($int(0))))) {
                    $line=131;
                    $result=GCollections.asList(s,1);
                    if (true) break $try;
                  }
                  else {
                    $line=132;
                    if (($opEqualY(p,1)&&$opEqualY(\u03C3,((java.lang.String)s).charAt($int(1))))) {
                      $line=132;
                      $result=GCollections.asList(s,2);
                      if (true) break $try;
                    }
                    else {
                      $line=133;
                      if ($opEqualY(p,1)) {
                        $line=133;
                        $result=GCollections.asList(s,0);
                        if (true) break $try;
                      }
                      else {
                        $line=134;
                        if (($opEqualY(p,2)&&$opEqualY(\u03C3,((java.lang.String)s).charAt($int(0))))) {
                          $line=134;
                          $result=GCollections.asList(s,1);
                          if (true) break $try;
                        }
                        else {
                          $line=135;
                          $result=GCollections.asList(s,0);
                          if (true) break $try;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      $line=138;
      $rethrow(new RuntimeException("The function \"\u03B4(q:Object,\u03C3:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,ReplaceForxyz.class,"\u03B4",$line);
    }
    return $result;
  }
  public static Object \u03B41(Object q, Object \u03C3) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=141;
      String s=null;
      s=$defaultValue(String.class);
      $line=143;
      if (($opEqualY(q,"E")||$opEqualY(q,"F"))) {
        $line=144;
        $result="E";
        if (true) break $try;
      }
      else {
        $line=145;
        if ($opEqualY($opAbsolY(q),1)) {
          $line=146;
          s=$cast(String.class,$fix($getArrayValue(q,new Object[]{0})));
          $line=147;
          if (((($opEqualY(((java.lang.String)s).length(),0)&&!$opEqualY(\u03C3,'#'))&&!$opEqualY(\u03C3,':'))&&!$opEqualY(\u03C3,'$'))) {
            $line=148;
            $result=GCollections.asList($opAdditY("",\u03C3));
            if (true) break $try;
          }
          else {
            $line=149;
            if ((((($opEqualY(((java.lang.String)s).length(),1)&&!$opEqualY(\u03C3,((java.lang.String)s).charAt($int(0))))&&!$opEqualY(\u03C3,'#'))&&!$opEqualY(\u03C3,':'))&&!$opEqualY(\u03C3,'$'))) {
              $line=150;
              $result=GCollections.asList($opAdditY($opAdditY("",s),\u03C3));
              if (true) break $try;
            }
            else {
              $line=151;
              if (((((($opEqualY(((java.lang.String)s).length(),2)&&!$opEqualY(\u03C3,((java.lang.String)s).charAt($int(0))))&&!$opEqualY(\u03C3,((java.lang.String)s).charAt($int(1))))&&!$opEqualY(\u03C3,'#'))&&!$opEqualY(\u03C3,':'))&&!$opEqualY(\u03C3,'$'))) {
                $line=152;
                $result=GCollections.asList($opAdditY($opAdditY("",s),\u03C3));
                if (true) break $try;
              }
              else {
                $line=153;
                if (($opEqualY(((java.lang.String)s).length(),3)&&$opEqualY(\u03C3,':'))) {
                  $line=154;
                  $result=GCollections.asList(s,0);
                  if (true) break $try;
                }
                else {
                  $line=156;
                  $result="E";
                  if (true) break $try;
                }
              }
            }
          }
        }
        else {
          $line=159;
          Object $v32=$getArrayValue(q,new Object[]{0});
          Object $v33=$getArrayValue(q,new Object[]{1});
          s=$cast(String.class,$fix($v32));
          Object p=$fix($v33);
          $line=160;
          if ($opEqualY(\u03C3,':')) {
            $line=160;
            $result="E";
            if (true) break $try;
          }
          else {
            $line=161;
            if ($opEqualY(\u03C3,'#')) {
              $line=161;
              $result="F";
              if (true) break $try;
            }
            else {
              $line=162;
              if ($opEqualY(\u03C3,'$')) {
                $line=162;
                $result=GCollections.asList(s,0);
                if (true) break $try;
              }
              else {
                $line=164;
                if (($opEqualY(p,0)&&$opEqualY(\u03C3,((java.lang.String)s).charAt($int(0))))) {
                  $line=164;
                  $result=GCollections.asList(s,1);
                  if (true) break $try;
                }
                else {
                  $line=165;
                  if ($opEqualY(p,0)) {
                    $line=165;
                    $result=GCollections.asList(s,0);
                    if (true) break $try;
                  }
                  else {
                    $line=166;
                    if (($opEqualY(p,1)&&$opEqualY(\u03C3,((java.lang.String)s).charAt($int(0))))) {
                      $line=166;
                      $result=GCollections.asList(s,1);
                      if (true) break $try;
                    }
                    else {
                      $line=167;
                      if (($opEqualY(p,1)&&$opEqualY(\u03C3,((java.lang.String)s).charAt($int(1))))) {
                        $line=167;
                        $result=GCollections.asList(s,2);
                        if (true) break $try;
                      }
                      else {
                        $line=168;
                        if ($opEqualY(p,1)) {
                          $line=168;
                          $result=GCollections.asList(s,0);
                          if (true) break $try;
                        }
                        else {
                          $line=169;
                          if (($opEqualY(p,2)&&$opEqualY(\u03C3,((java.lang.String)s).charAt($int(0))))) {
                            $line=169;
                            $result=GCollections.asList(s,1);
                            if (true) break $try;
                          }
                          else {
                            $line=170;
                            if (($opEqualY(p,2)&&$opEqualY(\u03C3,((java.lang.String)s).charAt($int(2))))) {
                              $line=170;
                              $result="E";
                              if (true) break $try;
                            }
                            else {
                              $line=172;
                              $result=GCollections.asList(s,0);
                              if (true) break $try;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      $line=175;
      $rethrow(new RuntimeException("The function \"\u03B41(q:Object,\u03C3:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,ReplaceForxyz.class,"\u03B41",$line);
    }
    return $result;
  }
  public static Object h(Object q, Object \u03C3) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=177;
      String s=null;
      s=$defaultValue(String.class);
      $line=178;
      if (($opEqualY(q,"E")||$opEqualY(q,"F"))) {
        $line=179;
        $result="";
        if (true) break $try;
      }
      else {
        $line=180;
        if ($opEqualY($opAbsolY(q),1)) {
          $line=181;
          s=$cast(String.class,$fix($getArrayValue(q,new Object[]{0})));
          $line=182;
          if ($opEqualY(((java.lang.String)s).length(),0)) {
            $line=183;
            $result=$opAdditY("",\u03C3);
            if (true) break $try;
          }
          else {
            $line=184;
            if (($opEqualY(((java.lang.String)s).length(),1)&&!$opEqualY(\u03C3,((java.lang.String)s).charAt($int(0))))) {
              $line=185;
              $result=$opAdditY("",\u03C3);
              if (true) break $try;
            }
            else {
              $line=186;
              if ((($opEqualY(((java.lang.String)s).length(),2)&&!$opEqualY(\u03C3,((java.lang.String)s).charAt($int(0))))&&!$opEqualY(\u03C3,((java.lang.String)s).charAt($int(1))))) {
                $line=187;
                $result=$opAdditY("",\u03C3);
                if (true) break $try;
              }
              else {
                $line=188;
                if (($opEqualY(((java.lang.String)s).length(),3)&&$opEqualY(\u03C3,':'))) {
                  $line=189;
                  $result=":";
                  if (true) break $try;
                }
                else {
                  $line=190;
                  $result="";
                  if (true) break $try;
                }
              }
            }
          }
        }
        else {
          $line=193;
          Object $v34=$getArrayValue(q,new Object[]{0});
          Object $v35=$getArrayValue(q,new Object[]{1});
          s=$cast(String.class,$fix($v34));
          Object p=$fix($v35);
          $line=194;
          if ($opEqualY(\u03C3,'#')) {
            $line=194;
            $result=$opAdditY(((java.lang.String)s).substring($int(0),$int(p)),"#");
            if (true) break $try;
          }
          else {
            $line=195;
            if (($opEqualY(p,0)&&$opEqualY(\u03C3,((java.lang.String)s).charAt($int(0))))) {
              $line=195;
              $result="";
              if (true) break $try;
            }
            else {
              $line=196;
              if ($opEqualY(p,0)) {
                $line=196;
                $result=$opAdditY("",\u03C3);
                if (true) break $try;
              }
              else {
                $line=197;
                if (($opEqualY(p,1)&&$opEqualY(\u03C3,((java.lang.String)s).charAt($int(0))))) {
                  $line=197;
                  $result=((java.lang.String)s).charAt($int(0));
                  if (true) break $try;
                }
                else {
                  $line=198;
                  if (($opEqualY(p,1)&&$opEqualY(\u03C3,((java.lang.String)s).charAt($int(1))))) {
                    $line=198;
                    $result="";
                    if (true) break $try;
                  }
                  else {
                    $line=199;
                    if ($opEqualY(p,1)) {
                      $line=199;
                      $result=$opAdditY($opAdditY("",((java.lang.String)s).charAt($int(0))),\u03C3);
                      if (true) break $try;
                    }
                    else {
                      $line=200;
                      if (($opEqualY(p,2)&&$opEqualY(\u03C3,((java.lang.String)s).charAt($int(0))))) {
                        $line=200;
                        $result=$opAdditY($opAdditY("",((java.lang.String)s).charAt($int(0))),((java.lang.String)s).charAt($int(1)));
                        if (true) break $try;
                      }
                      else {
                        $line=201;
                        if (($opEqualY(p,2)&&$opEqualY(\u03C3,((java.lang.String)s).charAt($int(2))))) {
                          $line=201;
                          $result="$";
                          if (true) break $try;
                        }
                        else {
                          $line=202;
                          $result=$opAdditY($opAdditY($opAdditY("",((java.lang.String)s).charAt($int(0))),((java.lang.String)s).charAt($int(1))),\u03C3);
                          if (true) break $try;
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
      $line=205;
      $rethrow(new RuntimeException("The function \"h(q:Object,\u03C3:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,ReplaceForxyz.class,"h",$line);
    }
    return $result;
  }
  public static Object h1(Object q, Object \u03C3) {
    int $line=0;
    Object $result=null;
    $try:try {
      $line=209;
      String s=null;
      s=$defaultValue(String.class);
      $line=210;
      if (($opEqualY(q,"E")||$opEqualY(q,"F"))) {
        $line=211;
        $result="";
        if (true) break $try;
      }
      else {
        $line=212;
        if ($opEqualY($opAbsolY(q),2)) {
          $line=213;
          Object $v36=$getArrayValue(q,new Object[]{0});
          Object $v37=$getArrayValue(q,new Object[]{1});
          s=$cast(String.class,$fix($v36));
          Object p=$fix($v37);
          $line=214;
          if ($opEqualY(\u03C3,'#')) {
            $line=214;
            $result="#";
            if (true) break $try;
          }
          else {
            $line=215;
            if ($opEqualY(\u03C3,'$')) {
              $line=215;
              $result=s;
              if (true) break $try;
            }
            else {
              $line=216;
              if (($opEqualY(p,2)&&$opEqualY(\u03C3,((java.lang.String)s).charAt($int(2))))) {
                $line=216;
                $result="";
                if (true) break $try;
              }
              else {
                $line=217;
                $result=\u03C3;
                if (true) break $try;
              }
            }
          }
        }
        else {
          $line=219;
          if ($opEqualY(\u03C3,'$')) {
            $line=219;
            $result="";
            if (true) break $try;
          }
          else {
            $line=220;
            $result=\u03C3;
            if (true) break $try;
          }
        }
      }
      $line=222;
      $rethrow(new RuntimeException("The function \"h1(q:Object,\u03C3:Object)\" did not return a value."));
    }
    catch (Throwable $throwable) {
      $rethrow($throwable,ReplaceForxyz.class,"h1",$line);
    }
    return $result;
  }
}
